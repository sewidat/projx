org: sewidat
app: projectx
service: products

frameworkVersion: "2 || 3"

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    tableName: ${self:custom.tableName}
  httpApi:
    cors: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"

plugins:
  - serverless-package-common
  - serverless-plugin-webpack
custom:
  webpack:
    config: config/webpack.config.js
    series: true # run Webpack in series, useful for large projects. Defaults to false.
  packageCommon:
    common:
      - "../common"
  tableName: ProductsTable

functions:
  hello:
    handler: handler.hello
  getAllProducts:
    handler: handler.getAllProducts
    events:
      - httpApi:
          path: /products
          method: GET
  getByID:
    handler: handler.getByID
    events:
      - httpApi:
          path: /product
          method: GET
  getCategories:
    handler: handler.getCategories
    events:
      - httpApi:
          path: /categories
          method: GET
  addProduct:
    handler: handler.addProduct
    events:
      - httpApi:
          path: /product
          method: POST
  deleteProduct:
    handler: handler.deleteProduct
    events:
      - httpApi:
          path: /product
          method: DELETE
  getProductsForSeller:
    handler: handler.getProductsForSeller
    events:
      - httpApi:
          path: /seller/products
          method: GET
  updateProduct:
    handler: handler.updateProduct
    events:
      - httpApi:
          path: /product
          method: PUT
  getAllByCategory:
    handler: handler.getAllByCategory
    events:
      - httpApi:
          path: /product/category
          method: GET
  productWithReviews:
    handler: handler.productWithReviews
    events:
      - httpApi:
          path: /product/reviews
          method: GET
  addReview:
    handler: handler.addReview
    events:
      - httpApi:
          path: /product/review
          method: POST
  getRating:
    handler: handler.getRating
    events:
      - httpApi:
          path: /product/rating
          method: GET
  setRating:
    handler: handler.setRating
    events:
      - httpApi:
          path: /product/raiting
          method: POST
